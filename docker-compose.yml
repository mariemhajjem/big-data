version: '3.6'
services:
  KAFKA_BROKER_1:
    container_name: KAFKA_BROKER_1
    image: wurstmeister/kafka 
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - "9092:9092"
    volumes:
      - ./kafka_data/broker_1:/opt/kafka_data
    environment:
      KAFKA_LOG_DIRS: /opt/kafka_data
      KAFKA_BROKER_ID: 1 
      KAFKA_LOG_RETENTION_HOURS: "168"
      KAFKA_LOG_RETENTION_BYTES: "100000000"
      KAFKA_ZOOKEEPER_CONNECT:  zookeeper1:2181,zookeeper2:2181,zookeeper3:2181 
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:9092,INSIDE://KAFKA_BROKER_1:29092
      KAFKA_LISTENERS: OUTSIDE://:9092,INSIDE://KAFKA_BROKER_1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

  KAFKA_BROKER_2:
    image: wurstmeister/kafka
    container_name: KAFKA_BROKER_2 
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - "9093:9093"
    volumes:
      - ./kafka_data/broker_2:/opt/kafka_data
    environment:
      KAFKA_LOG_DIRS: /opt/kafka_data
      KAFKA_BROKER_ID: 2
      KAFKA_LOG_RETENTION_HOURS: "168"
      KAFKA_LOG_RETENTION_BYTES: "100000000"
      KAFKA_ZOOKEEPER_CONNECT:  zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:9093,INSIDE://KAFKA_BROKER_2:29092
      KAFKA_LISTENERS: OUTSIDE://:9093,INSIDE://KAFKA_BROKER_2:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

  KAFKA_BROKER_3:
    image: wurstmeister/kafka
    container_name: KAFKA_BROKER_3 
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - "9094:9094"
    volumes:
      - ./kafka_data/broker_3:/opt/kafka_data
    environment:
      KAFKA_LOG_DIRS: /opt/kafka_data
      KAFKA_BROKER_ID: 3
      KAFKA_LOG_RETENTION_HOURS: "168"
      KAFKA_LOG_RETENTION_BYTES: "100000000"
      KAFKA_ZOOKEEPER_CONNECT:  zookeeper1:2181,zookeeper2:2181,zookeeper3:2181 
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:9094,INSIDE://KAFKA_BROKER_3:29092
      KAFKA_LISTENERS: OUTSIDE://:9094,INSIDE://KAFKA_BROKER_3:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

  zookeeper1:
    image: elevy/zookeeper:latest
    container_name: zookeeper1
    environment:
      MYID: 1
      SERVERS: zookeeper1,zookeeper2,zookeeper3
    ports:
      - "2181:2181"
      - "2888"
      - "3888"

  zookeeper2:
    image: elevy/zookeeper:latest
    container_name: zookeeper2
    environment:
      MYID: 2
      SERVERS: zookeeper1,zookeeper2,zookeeper3
    ports:
      - "2182:2181"
      - "2888"
      - "3888"

  zookeeper3:
    image: elevy/zookeeper:latest
    container_name: zookeeper3
    environment:
      MYID: 3
      SERVERS: zookeeper1,zookeeper2,zookeeper3
    ports:
      - "2183:2181"
      - "2888"
      - "3888"
  jupyterLab:
    image: andreper/jupyterlab:latest
    container_name: jupyterLab
    ports:
      - 8888:8888
      - 4040:4040
    volumes:
      - shared-workspace:/opt/workspace

  #SPARK CLUSTER

  spark:
    image: bde2020/spark-master:3.2.0-hadoop3.2
    container_name: spark
    ports:
      - 8080:8080
      - 7077:7077
    environment:
      - PYSPARK_PYTHON=python3
      - PYSPARK_DRIVER_PYTHON=python3
      - INIT_DAEMON_STEP=setup_spark

  spark-slave-1:
    image: bde2020/spark-worker:3.2.0-hadoop3.2
    container_name: spark_slave_1
    depends_on:
      - spark
    environment:
      - SPARK_MASTER=spark://spark:7077
      - PYSPARK_PYTHON=python3
      - PYSPARK_DRIVER_PYTHON=python3
    ports:
      - 8081:8081

  spark-slave-2:
    image: bde2020/spark-worker:3.2.0-hadoop3.2
    container_name: spark_slave_2
    depends_on:
      - spark
    environment:
      - SPARK_MASTER=spark://spark:7077
      - PYSPARK_PYTHON=python3
      - PYSPARK_DRIVER_PYTHON=python3
    ports:
      - 8082:8081

  #HADOOP

  hadoop_namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.1.3-java8
    container_name: hadoop_namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - ./hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.3-java8
    container_name: datanode1
    restart: always
    volumes:
      - ./hadoop_datanode_1:/hadoop/dfs/datanode_1
    environment:
      SERVICE_PRECONDITION: "hadoop_namenode:9870"
    env_file:
      - ./hadoop.env

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.3-java8
    container_name: datanode2
    restart: always
    volumes:
      - ./hadoop_datanode_2:/hadoop/dfs/datanode_2
    environment:
      SERVICE_PRECONDITION: "hadoop_namenode:9870"
    env_file:
      - ./hadoop.env
  
  influxdb-cli:
    container_name: influxdb-cli
    image: influxdb:2.1.0-alpine
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: nusret
      DOCKER_INFLUXDB_INIT_PASSWORD: this_is_my_long_password
      DOCKER_INFLUXDB_INIT_ORG: mariem
      DOCKER_INFLUXDB_INIT_BUCKET: mariem
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: some_very_secret_token
    ports:
      - "8086:8086"

  telgraf:
    image: telegraf:1.21.1-alpine
    environment:
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: some_very_secret_token
      DOCKER_INFLUXDB_INIT_ORG: mariem
      DOCKER_INFLUXDB_INIT_BUCKET: mariem
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    depends_on:
      - influxdb-cli

volumes:
  shared-workspace:
    name: "hadoop-distributed-file-system"
    driver: local
networks:
  default:
    external:
      name: kafka_net